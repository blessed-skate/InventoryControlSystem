package mx.com.icsp.util.excel;

import java.awt.Font;
import java.awt.Label;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletResponse;
import javax.swing.border.Border;
import javax.xml.parsers.ParserConfigurationException;

import org.apache.poi.ss.format.CellFormat;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.usermodel.Workbook;
import org.w3c.dom.DOMException;
import org.w3c.dom.css.RGBColor;
import org.xml.sax.SAXException;

import sun.tools.jstat.Alignment;


public class ExcelWriter{

	private ExcelXmlParser parser;
	
	public void generate(String xml, HttpServletResponse resp){
		log.info(logPattern.buildPattern(methodName, idTransaction, "xml", xml));
		parser = new ExcelXmlParser();
		try {
			parser.setXML(xml);
		} catch (DOMException e) {
			log.error(logPattern.buildPattern(methodName, idTransaction, "DOMException", e.getMessage()), e);
		} catch (IOException e) {
			log.error(logPattern.buildPattern(methodName, idTransaction, "IOException", e.getMessage()), e);
		} catch (ParserConfigurationException e) {
			log.error(logPattern.buildPattern(methodName, idTransaction, "ParserConfigurationException", e.getMessage()), e);
		} catch (SAXException e) {
			log.error(logPattern.buildPattern(methodName, idTransaction, "SAXException", e.getMessage()), e);
		}
	} catch (UnsupportedEncodingException e) {
		log.error(logPattern.buildPattern(methodName, idTransaction, "UnsupportedEncodingException", e.getMessage()), e);
	}
}
